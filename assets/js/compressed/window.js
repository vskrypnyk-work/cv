let isDragging=!1,offsetX,offsetY,currentWindow=null,currentPosition=null;const positions=["shift-left","shift-top","shift-right","shift-bottom"];function openWindow(t){let e=document.getElementById(t);if(e){e.style.display="block",currentWindow=e;let i=positions[(positions.indexOf(currentPosition)+1)%positions.length];e.classList.remove(currentPosition),e.classList.add(i),currentPosition=i}}function closeWindow(t){let e=document.getElementById(t);e&&(e.style.display="none")}function minimize(t){let e=document.getElementById(t);e&&(e.classList.contains("minimized")?(e.classList.remove("minimized"),e.children.item(1).style.display="block"):(e.classList.add("minimized"),e.children.item(1).style.display="none"))}function startDragging(t){isDragging=!0;let e=t.target.closest(".window");currentWindow=e;let i,n;t.touches?(i=t.touches[0].clientX,n=t.touches[0].clientY):(i=t.clientX,n=t.clientY),offsetX=i-e.offsetLeft,offsetY=n-e.offsetTop}function dragWindow(t){if(!isDragging||!currentWindow)return;let e,i;t.touches?(e=t.touches[0].clientX,i=t.touches[0].clientY):(e=t.clientX,i=t.clientY);let n=e-offsetX,s=i-offsetY;currentWindow.style.left=n+"px",currentWindow.style.top=s+"px"}function stopDragging(){isDragging=!1}document.querySelectorAll(".title-bar").forEach(t=>{t.addEventListener("mousedown",startDragging),t.addEventListener("touchstart",startDragging,{passive:!1})}),document.addEventListener("mousemove",dragWindow),document.addEventListener("touchmove",dragWindow,{passive:!1}),document.addEventListener("mouseup",stopDragging),document.addEventListener("touchend",stopDragging);